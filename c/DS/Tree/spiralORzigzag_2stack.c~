#include<stdio.h>
#include<stdlib.h>




struct node
{
  int data;
  struct node *left;
  struct node *right;
}*root=NULL;




struct node *create(int data)
{
  struct node *newnode=(struct node *)malloc(sizeof(struct node));

  newnode->data=data;
  newnode->left=NULL;
  newnode->right=NULL;

  return newnode;

}

struct node *swap(struct node *s,struct node *s1)
{
  struct node *temp;

  temp=s;
  s=s1;
  s1=temp;
}

struct node *zigzag(struct node *root)
{int ltr=1;
  int top=-1,top1=-1;
  struct node *currstack[20];
  struct node *nextstack[20];

  top=top+1;
  currstack[top]=root;

  while(top!=-1)
    {
      temp=currstack[top];
      top=top-1;
   if(temp)
   {
      printf(" %d ",temp->data);
      if(ltor)
	{
	  if(temp->left)
	    {top1=top1+1;
	      nextstack[top1]=temp->left;
	    }
	  if(temp->right)
	    {top1=top1+1;
	      nextstack[top1]=temp->right;
	    }
	}
      else
	{
	  if(temp->right)
	    {
	      top1=top1+1;
	      nextstack[top1]=temp->right;
	    }
	  if(temp->left)
	    {top1=top1+1;
	      nextstack[top1]=temp->left;
	    }
	}
   }
   if(top==-1)
     {
       ltr=0;
       swap(currstack,nextstack);
     }
    
  }    

}



void display(struct node *root)
{
  if(root==NULL)
    return;

  display(root->left);
  printf("%d\t",root->data);
  display(root->right);
}



int main()
{

  root=create(50);
  root->left=create(40);
  root->right=create(60);
  root->left->right=create(44);
  root->right->right=create(80);

  display(root);

  zigzag(root);


  return 0;
}

