#include<stdio.h>
#include<stdlib.h>




struct node 
{
  int data;
  struct node *next;
}*head=NULL;


struct node *insert(struct node *head,int data)
{
  struct node *curr;
  struct node *newnode=(struct node *)malloc(sizeof(struct node));

  newnode->data=data;
  newnode->next=NULL;

  if(head==NULL)
{
  head=newnode;
  curr=newnode;
 }
  else
    {
      curr->next=newnode;
      curr=newnode;
    }

  return head;
}



void display(struct node *head)
{
  struct node *temp=head;

  while(temp!=NULL)
    {
      printf("%d-->",temp->data);
      temp=temp->next;
    }
  printf("\n");
}



struct node *reverse(struct node *temp)
{
  struct node *prev=NULL;
  struct node *curr=head;
  struct node *nextnode;

  while(curr!=NULL)
    {
      nextnode=curr->next;
      curr->next=prev;
      prev=curr;
      curr=nextnode;
    }
  temp=prev;
  return temp;
}




struct node * palindromeCheck(struct node *head)
{
  struct node *temp;
  struct node *slowptr=head;
  struct node *fastptr=head;

  while(fastptr->next->next!=NULL)
    {printf("In fun");
     fastptr=fastptr->next->next;
      slowptr=slowptr->next;
    }

  temp=slowptr;
  printf("%d",temp->data);

  temp=reverse(temp);

  return temp;
}

/*
void display(struct node *head)
{
  struct node *temp=head;

  while(temp!=NULL)
    {
      printf("%d-->",temp->data);
      temp=temp->next;
    }
printf("\n");
}
*/

int main()
{int ans=-1;
  struct node *temp;

  head=insert(head,10);
  insert(head,20);
  insert(head,30);
  insert(head,20);
  insert(head,10);

  display(head);

  temp=palindromeCheck(head);
  display(temp);

  /*  ans=palindromeCheck(head);
  if(ans==1)
    printf("Yes the linklist is palindrome\n");
  else
    printf("No not palindrome\n");
  */
  return 0;
}
